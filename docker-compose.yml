version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-enterprise-kafka:5.5.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://192.168.1.64:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Useful settings for development/laptop use - modify as needed for Production 
      # This one makes ksqlDB feel a bit more responsive when queries start running 
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100 
  
  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.1 
    container_name: schema-registry 
    depends_on:
      - zookeeper 
      - broker 
    ports: 
      - 8081:8081 
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry 
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181 
  
  kafka-connect:
    image: confluentinc/cp-kafka-connect-base:5.4.1 
    container_name: kafka-connect 
    depends_on:
      - 8083:8083 
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_REST_PORT: 8083 
      CONNECT_GROUP_ID: kafka-connect 
      CONNECT_CONFIG_STORAGE_TOPIC: _kafka-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _kafka-connect-offsets 
      CONNECT_STATUS_STORAGE_TOPIC: _kafka-connect-status 
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter 
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http:///shcema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonCoverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1",
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components/,/connectors/'



  ksqldb-server:
    image: confluentinc/ksqldb-server:0.10.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - broker
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083 
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081 
      KSQL_KSQL_SERVICE_ID: confluent_r

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.10.0
    container_name: ksqldb-cli
    depends_on:
      - broker
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
